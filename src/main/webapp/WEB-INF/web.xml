<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee 
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
	
	
	<display-name>JavaRest</display-name>
	<description>Spring REST Service</description>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>javarest</param-value>
	</context-param>
	
	<!-- Set up log4j -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.xml</param-value>
	</context-param>
	
	 <!-- Root spring container setup -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

    <!-- Creates the Spring Context Container  -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- HTTP Method Conversion to support HTML's lack of support for the HTTP verbs DELETE and PUT. If using spring's form tags designate the action as delete or put. If using standard
        forms or request arguments, create an hidden input or request param named _method with the value of DELETE or PUT. -->
	<filter>
		<filter-name>httpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpMethodFilter</filter-name>
		<servlet-name>javarest</servlet-name>
	</filter-mapping>
    
    <!-- Web context configuration for our dispatcher servlet-->
	<servlet>
		<servlet-name>javarest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:applicationContext-web.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>javarest</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file></welcome-file>
	</welcome-file-list>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
</web-app>